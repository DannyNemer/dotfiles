[user]
	name = Danny Nemer
	email = hi@DannyNemer.com

[core]
	editor = code --wait

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[alias]
	# `git restore-dates [$number]` restores the commit dates to corresponding
	# author dates of the `$number` most recent commits, or all commits if
	# `$number` is undefined. This is useful after a rebase.
	restore-dates = !"restoreDates() { \
		HAS_CHANGES="$(git status -s)"; \
		if [[ -n $HAS_CHANGES ]]; then \
			git stash; \
		fi; \
		cd $(git rev-parse --show-toplevel); \
		git filter-branch --env-filter \
			'GIT_COMMITTER_DATE=$GIT_AUTHOR_DATE; export GIT_COMMITTER_DATE' -f \
		$([[ -n "$1" ]] && echo HEAD~$1..HEAD); \
		if [[ -n $HAS_CHANGES ]]; then \
			git stash pop --quiet; \
		fi; \
	}; restoreDates"

[advice]
	skippedCherryPicks = false

[pull]
	rebase = true
