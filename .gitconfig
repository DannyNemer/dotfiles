[user]
	name = Danny Nemer
	email = hi@DannyNemer.com

[core]
	excludesfile = /Users/Danny/.gitignore
	editor = /usr/bin/vim
	pager = diff-so-fancy | less --tabs=4 -RFX

[color]
	ui = always
[color "diff"]
	meta = yellow bold
	commit = green bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = "red bold 52"
	newNormal = "green bold"
	newHighlight = "green bold 22"

[push]
	default = simple

[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[alias]
	# `git restore-dates [$number]` restores the commit dates to corresponding
	# author dates of the `$number` most recent commits, or all commits if `$number`
	# is undefined. This is useful after a rebase.
	restore-dates = !"restoreDates() { \
		HAS_CHANGES="$(git status -s)"; \
		if [[ -n $HAS_CHANGES ]]; then \
			git stash; \
		fi; \
		cd $(git rev-parse --show-toplevel); \
		git filter-branch --env-filter \
			'GIT_COMMITTER_DATE=$GIT_AUTHOR_DATE; export GIT_COMMITTER_DATE' -f \
		$([[ -n "$1" ]] && echo HEAD~$1..HEAD); \
		if [[ -n $HAS_CHANGES ]]; then \
			git stash pop --quiet; \
		fi; \
	}; restoreDates"

[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustexitcode = true

[merge]
	tool = Kaleidoscope

[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[difftool]
	prompt = false

[mergetool]
	prompt = false

[diff]
	tool = Kaleidoscope